@model VERAExample.Models.LearnerData

@{
    ViewData["Title"] = "LearnerData";
}

<h1>LearnerData</h1>

<div>
    <h4>LearnerData</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.uln)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.uln)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.middleNames)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.middleNames)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.firstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.firstName)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.lastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.lastName)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.gender)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.gender)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.dateOfBirth)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.dateOfBirth)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.postcode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.postcode)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.addressLine1)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.addressLine1)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.addressLine2)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.addressLine2)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.addressLine3)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.addressLine3)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.addressLine4)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.addressLine4)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.addressLine5)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.addressLine5)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.senProvision)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.senProvision)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.senProvisionDescription)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.senProvisionDescription)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.primarySENType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.primarySENType)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.primarySENTypeDescription)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.primarySENTypeDescription)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.secondarySENType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.secondarySENType)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.secondarySENTypeDescription)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.secondarySENTypeDescription)
        </dd>
        <dt class="col-sm-2" style="text-transform: capitalize;">
            @Html.DisplayNameFor(model => model.freeSchoolMealEligible)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.freeSchoolMealEligible)
        </dd>
    </dl>
    
   
    @if (Model.qualifications != null && Model.qualifications.Any())
    {
        <h4>Qualifications</h4>
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th style="text-transform: capitalize;">@Html.DisplayNameFor(model => Model.qualifications.First().title)</th>
                    <th style="text-transform: capitalize;">@Html.DisplayNameFor(model => Model.qualifications.First().qan)</th>
                    <th style="text-transform: capitalize;">@Html.DisplayNameFor(model => Model.qualifications.First().awardDate)</th>
                    <th style="text-transform: capitalize;">@Html.DisplayNameFor(model => Model.qualifications.First().providerName)</th>
                    <th style="text-transform: capitalize;">@Html.DisplayNameFor(model => Model.qualifications.First().grade)</th>
                    <th style="text-transform: capitalize;">@Html.DisplayNameFor(model => Model.qualifications.First().awardingBody)</th>
                    <th style="text-transform: capitalize;">@Html.DisplayNameFor(model => Model.qualifications.First().level)</th>
                    <th style="text-transform: capitalize;">@Html.DisplayNameFor(model => Model.qualifications.First().underDataChallenge)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var qual in Model.qualifications.OrderBy(q => q.displaySort))
                {
                    <tr>
                        <td>@Html.DisplayFor(model => qual.title)</td>
                        <td>@Html.DisplayFor(model => qual.qan)</td>
                        <td>@Html.DisplayFor(model => qual.awardDate)</td>
                        <td>@Html.DisplayFor(model => qual.providerName)</td>
                        <td>@Html.DisplayFor(model => qual.grade)</td>
                        <td>@Html.DisplayFor(model => qual.awardingBody)</td>
                        <td>@Html.DisplayFor(model => qual.level)</td>
                        <td>@Html.DisplayFor(model => qual.underDataChallenge)</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No qualifications available.</p>
    }

    @if (Model.schools != null && Model.schools.Any())
    {
        <h4>School History</h4>
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th style="text-transform: capitalize;">@Html.DisplayNameFor(model => Model.schools.First().name)</th>
                    <th style="text-transform: capitalize;">@Html.DisplayNameFor(model => Model.schools.First().urn)</th>
                    <th style="text-transform: capitalize;">@Html.DisplayNameFor(model => Model.schools.First().academicYearStart)</th>
                    <th style="text-transform: capitalize;">@Html.DisplayNameFor(model => Model.schools.First().termStart)</th>
                    <th style="text-transform: capitalize;">@Html.DisplayNameFor(model => Model.schools.First().academicYearEnd)</th>
                    <th style="text-transform: capitalize;">@Html.DisplayNameFor(model => Model.schools.First().termEnd)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var school in Model.schools.OrderBy(s => s.displaySort))
                {
                    <tr>
                        <td>@Html.DisplayFor(model => school.name)</td>
                        <td>@Html.DisplayFor(model => school.urn)</td>
                        <td>@Html.DisplayFor(model => school.academicYearStart)</td>
                        <td>@Html.DisplayFor(model => school.termStart)</td>
                        <td>@Html.DisplayFor(model => school.academicYearEnd)</td>
                        <td>@Html.DisplayFor(model => school.termEnd)</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No school history available.</p>
    }
</div>
